tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport,  overwrite: true) {
    group 'Reporting'
    description 'Run tests and generate coverage report for instrumented and jvm testes'
    dependsOn 'test'

    reports {
        xml.enabled = true
        xml.destination = file("${rootProject.buildDir}/reports/${project.name}/jacocoTestReport.xml")
        html.enabled = true
    }

    def fileFilter = [
            '**/di/**',
            '**/*Model*.*',
            '**/*Test*.*'
    ]

    def kotlinTree = fileTree(dir: "${buildDir}/classes/kotlin/main", excludes: fileFilter)

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            kotlinTree
        })

        def coverageSourceDirs = [
                "src/main/kotlin"
        ]
        additionalSourceDirs.from += files(coverageSourceDirs)
        sourceDirectories.from += files(coverageSourceDirs)
    }

    test {
        jacoco {
            excludes += fileFilter
        }
    }

    doLast {
        println "Jacoco report has been generated to file://${reports.html.destination}/index.html"
    }
}
